name: Build and Publish
on:
  push:
    branches: [ main ]
    tags:
      - '*/v*'

jobs:
  Tag:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    outputs:
      device: ${{ steps.device.outputs.device }}
      version: ${{ steps.vesion.outputs.number }}
    steps:
      - id: device
        run: echo "::set-output name=device::$(echo ${{ github.ref_name }} | cut -d'/' -f1)"
      - id: version
        run: echo "::set-output name=number::$(echo ${{ github.ref_name }} | cut -d'v' -f2)"

  Build:
    runs-on: ubuntu-latest
    needs: Tag
    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
          cache: 'gradle'

      - name: build aar
        run: |
          ./gradlew ${{ needs.Tag.outputs.device }}:assembleRelease --no-daemon

  Publish:
    name: Publish Artifacts
    needs: [ Build, Tag ]
      # if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
          cache: 'gradle'

      - name: Publish to maven Repo with Gradle
        env:
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
          ORG_GRADLE_PROJECT_stagingProfileId: ${{ secrets.SONATYPE_PROFILE_ID }}
        run: |
          ./gradlew -PPUBLISHING -Purl=${{ github.server_url}}/${{ github.repository }} ${{ needs.Tag.outputs.device }}:publishToSonatype --no-daemon
