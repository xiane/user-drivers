name: Publish
on:
  push:
    branches: [ main ]
    tags:
      - '*/v*'

jobs:
  Tag:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    outputs:
      device: ${{ steps.device.outputs.device }}
      version: ${{ steps.vesion.outputs.number }}
    steps:
      - id: device
        run: echo "device=$(echo ${{ github.ref_name }} | cut -d'/' -f1)" >> $GITHUB_OUTPUT
      - id: version
        run: echo "number=$(echo ${{ github.ref_name }} | cut -d'v' -f2)" >> $GITHUB_OUTPUT

  Publish:
    name: Publish Artifacts
      #needs: [ Build, Tag ]
    needs: [ Tag ]
    if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Publish to maven Repo with Gradle
        env:
            # sonatype id/pwd
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
            # https://s01.oss.sonatype.org/index.html#stagingProfiles;<profile_id>
          ORG_GRADLE_PROJECT_stagingProfileId: ${{ secrets.SONATYPE_PROFILE_ID }}

            # gpg --armor --export-secret-keys <gpg --list-keys's key>
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_SECRET }}
            # gpg key password
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          ./gradlew -PPUBLISHING -Purl=${{ github.server_url}}/${{ github.repository }} -PgroupId=${{ secrets.SONATYPE_GROUP_ID }} -Ptarget=${{ needs.Tag.outputs.device }} ${{ needs.Tag.outputs.device }}:publishToSonatype --no-daemon --no-parallel
